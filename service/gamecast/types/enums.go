// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ApplicationStatus string

// Enum values for ApplicationStatus
const (
	ApplicationStatusInitialized ApplicationStatus = "INITIALIZED"
	ApplicationStatusProcessing  ApplicationStatus = "PROCESSING"
	ApplicationStatusReady       ApplicationStatus = "READY"
	ApplicationStatusDeleting    ApplicationStatus = "DELETING"
	ApplicationStatusError       ApplicationStatus = "ERROR"
)

// Values returns all known values for ApplicationStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ApplicationStatus) Values() []ApplicationStatus {
	return []ApplicationStatus{
		"INITIALIZED",
		"PROCESSING",
		"READY",
		"DELETING",
		"ERROR",
	}
}

type ApplicationStatusReason string

// Enum values for ApplicationStatusReason
const (
	ApplicationStatusReasonInternalError ApplicationStatusReason = "internalError"
	ApplicationStatusReasonAccessDenied  ApplicationStatusReason = "accessDenied"
)

// Values returns all known values for ApplicationStatusReason. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ApplicationStatusReason) Values() []ApplicationStatusReason {
	return []ApplicationStatusReason{
		"internalError",
		"accessDenied",
	}
}

type Protocol string

// Enum values for Protocol
const (
	ProtocolWebrtc Protocol = "WebRTC"
)

// Values returns all known values for Protocol. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Protocol) Values() []Protocol {
	return []Protocol{
		"WebRTC",
	}
}

type RuntimeEnvironmentType string

// Enum values for RuntimeEnvironmentType
const (
	RuntimeEnvironmentTypeWineStaging RuntimeEnvironmentType = "WINE-STAGING"
	RuntimeEnvironmentTypeProton      RuntimeEnvironmentType = "PROTON"
)

// Values returns all known values for RuntimeEnvironmentType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RuntimeEnvironmentType) Values() []RuntimeEnvironmentType {
	return []RuntimeEnvironmentType{
		"WINE-STAGING",
		"PROTON",
	}
}

type StreamClass string

// Enum values for StreamClass
const (
	StreamClassGen4aHigh  StreamClass = "gen4a_high"
	StreamClassGen4aUltra StreamClass = "gen4a_ultra"
	StreamClassGen4nHigh  StreamClass = "gen4n_high"
	StreamClassGen4nUltra StreamClass = "gen4n_ultra"
)

// Values returns all known values for StreamClass. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (StreamClass) Values() []StreamClass {
	return []StreamClass{
		"gen4a_high",
		"gen4a_ultra",
		"gen4n_high",
		"gen4n_ultra",
	}
}

type StreamGroupStatus string

// Enum values for StreamGroupStatus
const (
	StreamGroupStatusActivating StreamGroupStatus = "ACTIVATING"
	StreamGroupStatusActive     StreamGroupStatus = "ACTIVE"
	StreamGroupStatusError      StreamGroupStatus = "ERROR"
	StreamGroupStatusDeleting   StreamGroupStatus = "DELETING"
)

// Values returns all known values for StreamGroupStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (StreamGroupStatus) Values() []StreamGroupStatus {
	return []StreamGroupStatus{
		"ACTIVATING",
		"ACTIVE",
		"ERROR",
		"DELETING",
	}
}

type StreamGroupStatusReason string

// Enum values for StreamGroupStatusReason
const (
	StreamGroupStatusReasonInternalError        StreamGroupStatusReason = "internalError"
	StreamGroupStatusReasonNoAvailableInstances StreamGroupStatusReason = "noAvailableInstances"
)

// Values returns all known values for StreamGroupStatusReason. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (StreamGroupStatusReason) Values() []StreamGroupStatusReason {
	return []StreamGroupStatusReason{
		"internalError",
		"noAvailableInstances",
	}
}

type StreamSessionStatus string

// Enum values for StreamSessionStatus
const (
	StreamSessionStatusActivating                StreamSessionStatus = "ACTIVATING"
	StreamSessionStatusActive                    StreamSessionStatus = "ACTIVE"
	StreamSessionStatusConnected                 StreamSessionStatus = "CONNECTED"
	StreamSessionStatusPendingClientReconnection StreamSessionStatus = "PENDING_CLIENT_RECONNECTION"
	StreamSessionStatusReconnecting              StreamSessionStatus = "RECONNECTING"
	StreamSessionStatusTerminating               StreamSessionStatus = "TERMINATING"
	StreamSessionStatusTerminated                StreamSessionStatus = "TERMINATED"
	StreamSessionStatusError                     StreamSessionStatus = "ERROR"
)

// Values returns all known values for StreamSessionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (StreamSessionStatus) Values() []StreamSessionStatus {
	return []StreamSessionStatus{
		"ACTIVATING",
		"ACTIVE",
		"CONNECTED",
		"PENDING_CLIENT_RECONNECTION",
		"RECONNECTING",
		"TERMINATING",
		"TERMINATED",
		"ERROR",
	}
}

type StreamSessionStatusReason string

// Enum values for StreamSessionStatusReason
const (
	StreamSessionStatusReasonInternalError        StreamSessionStatusReason = "internalError"
	StreamSessionStatusReasonInvalidSignalRequest StreamSessionStatusReason = "invalidSignalRequest"
	StreamSessionStatusReasonPlacementTimeout     StreamSessionStatusReason = "placementTimeout"
)

// Values returns all known values for StreamSessionStatusReason. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (StreamSessionStatusReason) Values() []StreamSessionStatusReason {
	return []StreamSessionStatusReason{
		"internalError",
		"invalidSignalRequest",
		"placementTimeout",
	}
}

type ValidationExceptionReason string

// Enum values for ValidationExceptionReason
const (
	ValidationExceptionReasonUnknownOperation      ValidationExceptionReason = "unknownOperation"
	ValidationExceptionReasonCannotParse           ValidationExceptionReason = "cannotParse"
	ValidationExceptionReasonFieldValidationFailed ValidationExceptionReason = "fieldValidationFailed"
	ValidationExceptionReasonOther                 ValidationExceptionReason = "other"
)

// Values returns all known values for ValidationExceptionReason. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ValidationExceptionReason) Values() []ValidationExceptionReason {
	return []ValidationExceptionReason{
		"unknownOperation",
		"cannotParse",
		"fieldValidationFailed",
		"other",
	}
}
